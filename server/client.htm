<html>
    <head>
        <title>Chat Client DEMO</title>
    </head>
    <body>
        <div>
            <p>
                <label for="messageText">Message</label>
                <input type="text" id="messageText"/>
            </p>
            <p>
                <button id="sendButton">Senden</button>
                <button id="usernameButton">Namen &auml;ndern</button>
                <button id="userButton">Users online</button>
            </p>
        </div>
        <div>
            <ul id="messages">
            </ul>
        </div>

        <style type="text/css">
            .servermessage {
                color: blue;
            }

            .usersonline {
                color: green;
            }

            .history {
                color: #999;
            }
        </style>

        <script src="http://localhost:8000/socket.io/socket.io.js"></script>
        <script type="text/javascript"
                src="http://code.jquery.com/jquery-1.5.2.js"></script>
        <script type="text/javascript">
            $(document).ready(function() {

                // Parameter
                var serverurl = 'http://localhost:8000';
                var clientname = 'Anon';

                /** Objekt dass Serverconnection herstellt und verwaltet */
                var webSocket = io.connect(serverurl);

                /** Lösche Message Box bei Browser-Aktualisierung */
                $('#messages').text('');

                /** Server Verbindung wird erstmalig hergestellt */
                webSocket.on('connect', function() {
                    
                    // Username setzen
                    // TODO: Promt Box ersetzen!
                    username = prompt("Dein Username?","");

                    // TODO: Usernamen prüfen
                    
                    // TODO EVTL: Prüfen ob Username schon vergeben???
                    // webSocket.emit('permission', username);

                    webSocket.emit('username', username);


                });

                /** Server sendet Nachricht an Client */
                webSocket.on('message', function(data) {

                    console.log(data);

                    // var obj = jQuery.parseJSON(data);

                    // var html = '<span class="message">';

                    // html += '<span class="zeit">' + obj.zeit + '</span>';
                    // html += '<span class="username" style="farbe: ' + obj.farbe + '">' + obj.username + '</span>';
                    // html += obj.msg;

                    // html += '</span>';

                    // TODO: Richtig formatieren, je nach "Typ" andere Aktion durchführen
                    // Wird dann JSON Datei sein!
                    $('#messages').append(data);

                });

                /** Server sendet Servermessage an Client */
                webSocket.on('servermessage', function(data) {

                    // TODO: Richtig formatieren, je nach "Typ" andere Aktion durchführen
                    // Wird dann JSON Datei sein!
                    
                    var msg = '<li class="servermessage">' + data + '</li>'
                    $('#messages').append(msg);

                });

                webSocket.on('history', function(data) {

                    // TODO: JSON Array mit Objekten
                    // Muss mit FOR schleife durchlaufen werden
                    // Prüfung auf (servermessage), da 2 Message Typen vorhanden!
                    
                    var html = '<div class="history">' + data + '</div>'
                    $('#messages').append(html);
                    

                });

                webSocket.on('usersonline', function(data) {

                    console.log(data);
                    var obj = jQuery.parseJSON(data);

                    var html = '<span class="usersonline">';

                    for (o in obj) {

                        // Für jeden Datensatz eine Row
                        html += '<li>' + obj[o] + '</li>'

                    }

                    html += '</span>';
                    
                    $('#messages').append(html);

                });


                /** Verbindung zum Server getrennt */
                webSocket.on('disconnect', function() {
                    $('#messages').append('<li>Disconnected from the server.</li>');
                });


                /** Event-Handler: Senden Button gedrückt. BESSER: Enter Button!*/
                $('#sendButton').bind('click', function() {

                    // Nachricht auslesen
                    var message = $('#messageText').val();

                    if (message) {

                        // Nachricht versenden
                        webSocket.send(message);
            
                        // Textbox leeren
                        $('#messageText').val('');
                    }

                });

                $('#usernameButton').bind('click', function() {

                    // Nachricht auslesen
                    var username = $('#messageText').val();

                    if (username) {
                        // Nachricht versenden
                        webSocket.emit('username', username);
            
                        // Textbox leeren
                        $('#messageText').val('');
                    }

                    
                });

                $('#userButton').bind('click', function() {

                    // Nachricht versenden
                    webSocket.emit('usersonline', { my: 'data' });

                });

            });
        </script>
    </body>
</html>